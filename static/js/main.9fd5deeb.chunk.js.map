{"version":3,"sources":["logo.svg","Components/Card.js","Components/Plans.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","secondaryCardButton","margin","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","RecipeReviewCard","props","classes","React","useState","console","log","data","Card","className","CardHeader","title","name","CardMedia","image","imageUrl","CardContent","Typography","variant","color","component","description","price","CardActions","Button","onClick","linkToBeOpened","window","open","openLinkInNewTab","modelUrl","arr","key","mainWeeklyList","filter","item","includes","require","mainMonthlyList","mainYearlyList","TabPanel","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","a11yProps","palette","background","paper","width","FullWidthTabs","useTheme","setValue","AppBar","position","Tabs","onChange","event","newValue","indicatorColor","textColor","aria-label","Tab","label","dir","direction","Grid","container","spacing","map","xs","md","lg","sm","App","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fd5deeb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport {red} from '@material-ui/core/colors';\nimport Button from \"@material-ui/core/Button\"\nimport \"./Card.css\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n    },\n    secondaryCardButton: {\n        margin: '0 auto',\n        // display: \"flex\",\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\n\nexport default function RecipeReviewCard(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n    console.log(\"this.props===>\", props.data)\n    return (\n        <Card className={classes.root}>\n            <CardHeader\n                title={props.data.name}\n                // subheader=\"September 14, 2016 ----> September 15, 2016\"\n            />\n            <CardMedia\n                className={classes.media}\n                image={props.data.imageUrl}\n                title=\"Weekly Plan\"\n\n            />\n            {console.log(\"props==>\", props.data)}\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {/* className={\"Description-text\"} */}\n                    {props.data.description}\n                </Typography><br/>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {props.data.price}$\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button\n                    className={classes.secondaryCardButton}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    onClick={() => openLinkInNewTab(props.data.modelUrl)}>\n                    3D\n                </Button>\n                <Button variant=\"contained\" color=\"primary\">\n                </Button>\n            </CardActions>\n        </Card>\n    );\n}\n\n\nfunction openLinkInNewTab(linkToBeOpened) {\n    if (!linkToBeOpened) {/* if linkToBeOpened is invalid */\n        linkToBeOpened = \"https://3dviewer.net/embed.html#model=https://alphasingh.github.io/assets/obj/chair_lite.obj\";\n    }\n    return window.open(linkToBeOpened, \"_blank\");\n}","import React,{useState,useEffect} from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Card from \"./Card.js\"\nimport Grid from \"@material-ui/core/Grid\"\nimport logo from \"./../logo.svg\"\n\n\n\n/*function Content() {\n\n  const [seller, setSeller]= useState([]);\n  const url ='https://raw.githubusercontent.com/alphasingh/mocking-api/master/sellers.json';\n  \n  useEffect(()=>{\n     let fetchData = async()=> {\n        \n        const request = await axios.get(url);\n        //console.log(request.data.sellers);\n        setSeller(request.data.sellers);\n        return request;\n      }\n     \n      fetchData();\n             \n  },[url]);**/\n  \n\n \nconst arr = [{ key: ['WEEKLY','MONTHLY','YEARLY']}] \nlet weekly = arr.filter(item => item.key.includes('WEEKLY'));\nlet monthly = arr.filter(item => item.key.includes('MONTHLY'));\nlet yearly = arr.filter(item => item.key.includes('YEARLY'));\n\n\n\nconst mainWeeklyList=[\n    {\n        \"planTypes\" : ['WEEKLY'],\n        \"name\":\"Week1\",\n        \"description\":\"5 conatiners including veg curries + 14 chappatis + 1 large pulao rice or steam rice + dessert + pickle + chutney \",\n        \"averagePricePerPerson\":200,  \n        \"imageURL\":require(\"./../logo.svg\")     ,\n        \n    },\n    {\n        \"planTypes\" : ['WEEKLY'],\n        \"name\":\"Week2\",\n        \"description\":\"5 conatiners including veg curries + 7 chappatis + 1 large pulao rice or steam rice + dal + dessert + pickle + chutneyshfdfdjfh dewkfhew\",\n        \"averagePricePerPerson\":200,     \n        \"imageURL\":require(\"./../logo.svg\")      \n    },\n    {\n        \"planTypes\" : ['WEEKLY'],\n        \"name\":\"Week3\",\n        \"description\":\"Punjabi dish + 1 sweet + 1 glass buttermilk \",\n        \"averagePricePerPerson\":200,    \n        \"imageURL\":require(\"./../logo.svg\")       \n    },\n    {\n        \"planTypes\" : ['WEEKLY'],\n        \"name\":\"Week4\",\n        \"description\":\"Mexican Cuisine + 1 soup + dessert\",\n        \"averagePricePerPerson\":200,   \n        \"imageURL\":require(\"./../logo.svg\")        \n    },\n\n]\n\nconst mainMonthlyList=[\n    {\n        \"planTypes\" : ['MONTHLY'],\n        \"name\":\"Month1\",\n        \"description\":\"this is the month 1 list providing the details of gujarati dish \",\n        \"averagePricePerPerson\":500,  \n        \"imageURL\":require(\"./../logo.svg\")     \n    },\n    {\n        \"planTypes\" : ['MONTHLY'],\n        \"name\":\"Month 2\",\n        \"description\":\"we will provide you some punjabi dishes\",\n        \"averagePricePerPerson\":600,     \n        \"imageURL\":require(\"./../logo.svg\")      \n    },\n    // {\n    //     \"planTypes\" : ['MONTHLY'],\n    //     \"planName\":\"Month 3\",\n    //     \"planDescription\":\"how about mexican cuisines this time\",\n    //     \"rate\":800,    \n    //     \"imageURL\":require(\"./../logo.svg\")       \n    // },\n    // {\n    //     \"planTypes\" : ['MONTHLY'],\n    //     \"planName\":\"Month 4\",\n    //     \"planDescription\":\"missing indian taste...!!!we provide you with same taste and some dishes\",\n    //     \"rate\":1000,   \n    //     \"imageURL\":require(\"./../logo.svg\")        \n    // },\n\n]\n\nconst mainYearlyList=[\n    {\n        \"planTypes\" : ['YEARLY'],\n        \"name\":\"year 1\",\n        \"description\":\"providing the details of gujarati dish \",\n        \"averagePricePerPerson\":900,  \n        \"imageURL\":require(\"./../logo.svg\")     \n    },\n    {\n        \"planTypes\" : ['YEARLY'],\n        \"name\":\"year 2\",\n        \"description\":\"we will provide you some punjabi dishes\",\n        \"averagePricePerPerson\":1200,     \n        \"imageURL\":require(\"./../logo.svg\")      \n    },\n    // {\n    //     \"planTypes\" : ['YEARLY'],\n    //     \"planName\":\"year 3\",\n    //     \"planDescription\":\"how about mexican cuisines this time\",\n    //     \"rate\":1900,    \n    //     \"imageLink\":require(\"./../logo.svg\")       \n    // },\n    // {\n    //     \"planTypes\" : ['YEARLY'],\n    //     \"planName\":\"year 4\",\n    //     \"planDescription\":\"missing indian taste...!!!we provide you with same taste and some dishes\",\n    //     \"rate\":1000,   \n    //     \"imageLink\":require(\"./../logo.svg\")        \n    // },\n\n]\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: \"100%\",\n  },\n}));\n\nexport default function FullWidthTabs() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n// const [seller, setSeller]= useState([]);\n  \n//   useEffect(()=>{\n//      let fetchData = async()=> {\n        \n//         const request = await axios.get('https://raw.githubusercontent.com/alphasingh/mocking-api/master/sellers.json');\n//         //console.log(request.data.sellers);\n//         setSeller(request.data.sellers);\n//         return request;\n//       }\n     \n//       fetchData();\n             \n//   },[]);\n\n  \n  \n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\"\n        >\n          <Tab label=\"Weekly\" {...a11yProps(0)} />\n          <Tab label=\"Monthly\" {...a11yProps(1)} />\n          <Tab label=\"Yearly\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n   \n        <TabPanel value={value} index={0} dir={theme.direction}>\n            <Grid container spacing={2}>\n                {mainWeeklyList && mainWeeklyList.map((item,index)=>{\n                    return(\n                        <Grid item xs={12} md={4} lg={4} sm={4}>\n                            {console.log(\"iotem===>\",item)}\n                        <Card\n                        data={item}/>\n                        </Grid>\n                    )\n                })}\n{/*                \n                <Grid item xs={12} md={4} lg={4} sm={4}>\n                <Card/>\n                </Grid>\n                <Grid item xs={12} md={4} lg={4} sm={4}>\n                <Card/>\n                </Grid> */}\n            </Grid>\n         \n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n        <Grid container spacing={2}>\n                {mainMonthlyList && mainMonthlyList.map((item,index)=>{\n                    return(\n                        <Grid item xs={12} md={4} lg={4} sm={4}>\n                            {console.log(\"iotem===>\",item)}\n                        <Card\n                        data={item}/>\n                        </Grid>\n                    )\n                })}\n            </Grid>\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n        <Grid container spacing={2}>\n                {mainYearlyList && mainYearlyList.map((item,index)=>{\n                    return(\n                        <Grid item xs={12} md={4} lg={4} sm={4}>\n                            {console.log(\"iotem===>\",item)}\n                        <Card\n                        data={item}/>\n                        </Grid>\n                    )\n                })}\n            </Grid>\n        {/* <Grid container spacing={2}>\n          {seller.map((item,index)=>{\n         return(\n          <Grid item xs={12} md={4} lg={4} sm={4}>\n          {console.log(\"iotem===>\",item)}\n          <Card\n              data={item}/>\n      </Grid>\n             \n            )\n          }\n       \n          )}\n          </Grid> */}\n        </TabPanel>\n    </div>\n  );\n}\n","import './App.css';\nimport React from 'react';\nimport Plans from \"./Components/Plans\" \nfunction App() {\n  return (\n\n    <React.Fragment>\n      {/* <Userdetails />\n      <Check /> */}\n      <Plans></Plans>\n    </React.Fragment>\n   /* <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        \n      </header>\n    </div>\n    **/\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}